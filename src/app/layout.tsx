import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { SessionWrapper } from "@/components/auth/session-wrapper";
import { ThemeProvider } from "@/components/ui/theme-provider";
import RouteLoader from "@/components/layout/route-loader";
import { I18nProvider } from '@/i18n/I18nProvider';

const geistSans = Geist({
   variable: "--font-geist-sans",
   subsets: ["latin"],
});

const geistMono = Geist_Mono({
   variable: "--font-geist-mono",
   subsets: ["latin"],
});

// Example for dynamic metadata in a page file:
// export async function generateMetadata() {
//   return { title: "Dashboard | DoKi" };
// }

export async function generateMetadata(): Promise<Metadata> {
  // You can add logic here to set a dynamic title based on route, user, etc.
  // For now, fallback to a default:
  return {
    title: {
      default: "DoKi",
      template: "%s | DoKi"
    },
    description: "Generated by create next app",
  };
}

export default function RootLayout({
   children,
}: Readonly<{
   children: React.ReactNode;
}>) {
   return (
      <html
         lang="en"
         suppressHydrationWarning
         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
         <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
         >
            <ThemeProvider
               attribute="class"
               defaultTheme="system"
               enableSystem
               disableTransitionOnChange
            >
               <SessionWrapper>
                  <RouteLoader />
                  <I18nProvider>
                     {children}
                  </I18nProvider>
               </SessionWrapper>
            </ThemeProvider>
         </body>
      </html>
   );
}
